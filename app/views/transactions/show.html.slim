h1 Transaction Data

div.tx-data.card
  .card-header
    h5.card-title
      | TxInfo
    p.card-text
      | TxID: #{@decodedtransaction['txid']}
      br
      | Size: #{@decodedtransaction['size']}
  .card-body
    ul.list-group.list-group-flush
      - @decodedtransaction['vin'].each_with_index do |vin, n|
        li.list-group-item
          h5.card-title
            | TxIn[#{n}]

          - unless vin['coinbase'].nil?
            p.card-text
              | This is coinbase transaction.
              br
              | Coinbase: "#{vin['coinbase']}"

          - else
            p.card-text
              | TxID:
              = link_to "#{vin['txid']}", transactions_show_path(txid: vin['txid'])
              br
              | vout: #{vin['vout']}

      - @decodedtransaction['vout'].each_with_index do |vout, n|
        li.list-group-item
          h5.card-title
            | TxOut[#{n}]

          - if vout['token'].start_with?('c1')
            p.card-text
              | This is Reissuable Token.
          - elsif vout['token'].start_with?('c2')
            p.card-text
              | This is Non-Reissuable Token.
          - elsif vout['token'].start_with?('c3')
            p.card-text
              | This is NFT.

          - if vout['scriptPubKey']['asm'].start_with?('OP_RETURN')
            p.card-text
              | This is Metadata output.
            p.card-text
              | scriptPubkey
              br
              | 　asm: #{vout['scriptPubKey']['asm']}
              br
              | 　hex: #{vout['scriptPubKey']['hex']}
              br
              | 　type: #{vout['scriptPubKey']['type']}
            p.card-text
              | Metadata
              br
              | 　Hashed Metadata: #{vout['scriptPubKey']['asm'].split()[1]}
              br
              | 　Row Metadata: #{decode_metadata(vout['scriptPubKey']['asm'].split()[1]).force_encoding("UTF-8")}
          - else
            p.card-text
            | Token: #{vout['token']}
            br
            | Value: #{vout['value']}

      li.list-group-item
        .text-end
          button[class="btn btn-info" type="button" data-bs-toggle="collapse" data-bs-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample"]
            | Show raw content
        .collapse#collapseExample
          .card.card-body
            pre
              = @json
